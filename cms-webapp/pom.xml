<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.jjYBdx4IL.cms</groupId>
        <artifactId>cms-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../cms-parent</relativePath>
    </parent>

    <artifactId>cms-webapp</artifactId>
    <packaging>war</packaging>

    <name>CMS WebApp</name>
    <inceptionYear>2017</inceptionYear>

    <properties>
        <webappAssetsDirectory>${project.build.directory}/${project.build.finalName}/assets</webappAssetsDirectory>
    </properties>

    <build>
        <!-- put compiled classes where jetty:run's auto-reload is looking for changes -->
        <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>

        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <executions>
                    <execution>
                        <id>jetty-it-start</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>jetty-it-stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
                <configuration>
                    <!-- we cannot use provided scope for additional server classes because if the webapp needs it too, it 
                        may get declared twice, once explicitly with provided scope, and once through the plugin's dependencies, which leads to class 
                        loading errors like "class not found" -->
                    <useProvidedScope>false</useProvidedScope>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                    <webApp>
                        <overrideDescriptor>${project.basedir}/src/main/webapp/WEB-INF/web.devel.xml</overrideDescriptor>
                        <resourceBases>
                            <resourceBase>${project.basedir}/src/main/webapp</resourceBase>
                            <resourceBase>${project.build.directory}/${project.build.finalName}</resourceBase>
                        </resourceBases>
                    </webApp>
                    <jettyEnvXml>${project.basedir}/src/main/webapp/WEB-INF/jetty-env.xml</jettyEnvXml>
                    <jettyXml>${project.basedir}/src/main/webapp/WEB-INF/jetty.devel.xml</jettyXml>
                    <systemProperties>
                        <systemProperty>
                            <name>jetty.http.port</name>
                            <value>${jetty.http.port}</value>
                        </systemProperty>
                        <systemProperty>
                            <!-- h2 frontend: -->
                            <name>h2.bindAddress</name>
                            <value>localhost</value>
                        </systemProperty>
                        <systemProperty>
                            <name>basedir</name>
                            <value>${basedir}</value>
                        </systemProperty>
                    </systemProperties>
                    <stopKey>123</stopKey>
                    <stopPort>8085</stopPort>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.jjYBdx4IL.cms</groupId>
                        <artifactId>cms-embedded-server</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <packagingExcludes>**/*.cache.ttf,**/hosted.html,WEB-INF/web.devel.xml,WEB-INF/jetty-env.xml,WEB-INF/jetty.devel.xml</packagingExcludes>
                    <!-- do NOT archive classes, or jetty:run's auto-reload does not work -->
                    <archiveClasses>false</archiveClasses>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-a-test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/jetty.xml</exclude>
                        <exclude>**/log4j.xml</exclude>
                        <exclude>**/application-context.xml</exclude>
                        <exclude>**/application-properties.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <failIfNoTests>true</failIfNoTests>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <jetty.http.port>${jetty.http.port}</jetty.http.port>
                    </systemPropertyVariables>
                    <dependenciesToScan>
                        <dependency>${project.groupId}:cms-it</dependency>
                    </dependenciesToScan>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>https://developers.google.com/identity/images/signin-assets.zip</url>
                    <outputDirectory>${project.build.directory}/google-signin-assets</outputDirectory>
                    <targetDirectory>${project.build.directory}/google-signin-assets</targetDirectory>
                    <skipCache>false</skipCache>
                    <retries>2</retries>
                    <unpack>true</unpack>
                    <outputDirectory>${webappAssetsDirectory}</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.github.jjYBdx4IL.cms</groupId>
            <artifactId>cms-embedded-server</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.jjYBdx4IL.cms</groupId>
            <artifactId>cms-it</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
    </dependencies>

</project>
